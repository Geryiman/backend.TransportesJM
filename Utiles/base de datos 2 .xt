-- Borrar base de datos si existe
DROP DATABASE IF EXISTS transportes;

-- Crear base de datos
CREATE DATABASE transportes CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

-- Usar base de datos
USE transportes;

-- Tabla de usuarios
CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  apellidos VARCHAR(100) NOT NULL,
  telefono VARCHAR(20) UNIQUE NOT NULL,
  username VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  genero VARCHAR(20) NOT NULL,
  estado ENUM('activo', 'bloqueado') DEFAULT 'activo',
  favorito BOOLEAN DEFAULT 0,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla de administradores
CREATE TABLE administradores (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  username VARCHAR(50) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  rol ENUM('administrador_general', 'conductor', 'secretario') NOT NULL,
  estado ENUM('activo', 'bloqueado') DEFAULT 'activo',
  favorito BOOLEAN DEFAULT 0,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Plantillas de unidades
CREATE TABLE plantillas_unidad (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  tipo ENUM('combi', 'autobus', 'otro') NOT NULL,
  total_asientos INT NOT NULL,
  descripcion TEXT,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Estructura de asientos
CREATE TABLE estructura_asientos (
  id INT AUTO_INCREMENT PRIMARY KEY,
  plantilla_id INT NOT NULL,
  fila INT NOT NULL,
  col INT NOT NULL,
  tipo ENUM('asiento', 'pasillo', 'conductor') NOT NULL,
  numero VARCHAR(10),
  FOREIGN KEY (plantilla_id) REFERENCES plantillas_unidad(id) ON DELETE CASCADE
);

-- Plantillas de paradas
CREATE TABLE plantillas_parada (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  lista JSON NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Paradas individuales (opcional si se usan nombres)
CREATE TABLE paradas_extra (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla de viajes
CREATE TABLE viajes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  origen VARCHAR(100) NOT NULL,
  destino VARCHAR(100) NOT NULL,
  fecha DATE NOT NULL,
  hora TIME NOT NULL,
  precio DECIMAL(10,2) NOT NULL,
  estado ENUM('disponible', 'finalizado', 'cancelado') DEFAULT 'disponible',
  id_parada_subida INT DEFAULT NULL,
  id_parada_bajada INT DEFAULT NULL,
  id_conductor INT DEFAULT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  finalizado_en TIMESTAMP NULL,
  FOREIGN KEY (id_parada_subida) REFERENCES plantillas_parada(id),
  FOREIGN KEY (id_parada_bajada) REFERENCES plantillas_parada(id),
  FOREIGN KEY (id_conductor) REFERENCES administradores(id)
);

-- Unidades asignadas a viajes
CREATE TABLE unidades_viaje (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_viaje INT NOT NULL,
  id_plantilla INT NOT NULL,
  numero_unidad INT NOT NULL,
  id_conductor INT NOT NULL,
  FOREIGN KEY (id_viaje) REFERENCES viajes(id) ON DELETE CASCADE,
  FOREIGN KEY (id_plantilla) REFERENCES plantillas_unidad(id),
  FOREIGN KEY (id_conductor) REFERENCES administradores(id)
);

-- Tabla de reservas
CREATE TABLE reservas (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_usuario INT NOT NULL,
  id_unidad_viaje INT NOT NULL,
  asiento VARCHAR(10) NOT NULL,
  nombre_viajero VARCHAR(100) NOT NULL,
  telefono_viajero VARCHAR(20),
  sube_en_terminal BOOLEAN DEFAULT TRUE,
  parada_extra_nombre VARCHAR(100),
  parada_bajada_nombre VARCHAR(100),
  metodo_pago VARCHAR(20) DEFAULT 'efectivo',
  pago_confirmado BOOLEAN DEFAULT FALSE,
  referencia_pago VARCHAR(100),
  estado ENUM('pendiente', 'confirmada', 'rechazada') DEFAULT 'pendiente',
  reservado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE,
  FOREIGN KEY (id_unidad_viaje) REFERENCES unidades_viaje(id) ON DELETE CASCADE,
  UNIQUE KEY unique_asiento_por_viaje (id_unidad_viaje, asiento)
);

-- Tabla de lugares de destino (si usas sugerencias o historial)
CREATE TABLE lugares (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(100) NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE cuentas_conductor (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_viaje INT NOT NULL,
  id_conductor INT NOT NULL,
  gasolina DECIMAL(10,2) DEFAULT 0,
  casetas DECIMAL(10,2) DEFAULT 0,
  total_efectivo DECIMAL(10,2) DEFAULT 0,
  total_tarjeta DECIMAL(10,2) DEFAULT 0,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (id_viaje) REFERENCES viajes(id),
  FOREIGN KEY (id_conductor) REFERENCES administradores(id)
);


CREATE TABLE cuentas_conductor_otros (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_cuenta_conductor INT NOT NULL,
  descripcion VARCHAR(255) NOT NULL,
  monto DECIMAL(10,2) NOT NULL,
  FOREIGN KEY (id_cuenta_conductor) REFERENCES cuentas_conductor(id)
);
